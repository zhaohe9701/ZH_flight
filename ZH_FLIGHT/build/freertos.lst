ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.text
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.StartDefaultTask,"ax",%progbits
  24              		.align	1
  25              		.global	StartDefaultTask
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	StartDefaultTask:
  31              	.LVL0:
  32              	.LFB137:
  33              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 2


  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  51:Core/Src/freertos.c **** 
  52:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** extern void MX_USB_DEVICE_Init(void);
  60:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  63:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  66:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  67:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  70:Core/Src/freertos.c **** {
  71:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  72:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  73:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  74:Core/Src/freertos.c ****   /* place for user code */
  75:Core/Src/freertos.c **** }
  76:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** /**
  79:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  80:Core/Src/freertos.c ****   * @param  None
ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 3


  81:Core/Src/freertos.c ****   * @retval None
  82:Core/Src/freertos.c ****   */
  83:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  84:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/freertos.c **** 
  86:Core/Src/freertos.c ****   /* USER CODE END Init */
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  89:Core/Src/freertos.c ****   /* add mutexes, ... */
  90:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  93:Core/Src/freertos.c ****   /* add semaphores, ... */
  94:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  97:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  98:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 101:Core/Src/freertos.c ****   /* add queues, ... */
 102:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* Create the thread(s) */
 105:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 106:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 107:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 110:Core/Src/freertos.c ****   /* add threads, ... */
 111:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c **** }
 114:Core/Src/freertos.c **** 
 115:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 116:Core/Src/freertos.c **** /**
 117:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 118:Core/Src/freertos.c ****   * @param  argument: Not used
 119:Core/Src/freertos.c ****   * @retval None
 120:Core/Src/freertos.c ****   */
 121:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 122:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 123:Core/Src/freertos.c **** {
  34              		.loc 1 123 1 view -0
  35              		.cfi_startproc
  36              		@ Volatile: function does not return.
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 123 1 is_stmt 0 view .LVU1
  40 0000 08B5     		push	{r3, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
 124:Core/Src/freertos.c ****   /* init code for USB_DEVICE */
 125:Core/Src/freertos.c ****   MX_USB_DEVICE_Init();
  45              		.loc 1 125 3 is_stmt 1 view .LVU2
ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 4


  46 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
  47              	.LVL1:
  48              	.L2:
 126:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 127:Core/Src/freertos.c ****   /* Infinite loop */
 128:Core/Src/freertos.c ****   for(;;)
  49              		.loc 1 128 3 discriminator 1 view .LVU3
 129:Core/Src/freertos.c ****   {
 130:Core/Src/freertos.c ****     osDelay(1);
  50              		.loc 1 130 5 discriminator 1 view .LVU4
  51 0006 0120     		movs	r0, #1
  52 0008 FFF7FEFF 		bl	osDelay
  53              	.LVL2:
 128:Core/Src/freertos.c ****   {
  54              		.loc 1 128 8 discriminator 1 view .LVU5
  55 000c FBE7     		b	.L2
  56              		.cfi_endproc
  57              	.LFE137:
  59              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  60              		.align	1
  61              		.global	vApplicationGetIdleTaskMemory
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  66              	vApplicationGetIdleTaskMemory:
  67              	.LVL3:
  68              	.LFB135:
  70:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  69              		.loc 1 70 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  71:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  74              		.loc 1 71 3 view .LVU7
  71:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  75              		.loc 1 71 25 is_stmt 0 view .LVU8
  76 0000 034B     		ldr	r3, .L5
  77 0002 0360     		str	r3, [r0]
  72:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  78              		.loc 1 72 3 is_stmt 1 view .LVU9
  72:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  79              		.loc 1 72 27 is_stmt 0 view .LVU10
  80 0004 034B     		ldr	r3, .L5+4
  81 0006 0B60     		str	r3, [r1]
  73:Core/Src/freertos.c ****   /* place for user code */
  82              		.loc 1 73 3 is_stmt 1 view .LVU11
  73:Core/Src/freertos.c ****   /* place for user code */
  83              		.loc 1 73 25 is_stmt 0 view .LVU12
  84 0008 8023     		movs	r3, #128
  85 000a 1360     		str	r3, [r2]
  75:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  86              		.loc 1 75 1 view .LVU13
  87 000c 7047     		bx	lr
  88              	.L6:
  89 000e 00BF     		.align	2
  90              	.L5:
ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 5


  91 0010 00000000 		.word	.LANCHOR0
  92 0014 00000000 		.word	.LANCHOR1
  93              		.cfi_endproc
  94              	.LFE135:
  96              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  97              		.align	1
  98              		.global	MX_FREERTOS_Init
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	MX_FREERTOS_Init:
 104              	.LFB136:
  83:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 105              		.loc 1 83 29 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 32
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 10B5     		push	{r4, lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 4, -8
 113              		.cfi_offset 14, -4
 114 0002 88B0     		sub	sp, sp, #32
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 40
 106:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 117              		.loc 1 106 3 view .LVU15
 118 0004 0DF1040C 		add	ip, sp, #4
 119 0008 074C     		ldr	r4, .L9
 120 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 121 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 122 0010 94E80700 		ldm	r4, {r0, r1, r2}
 123 0014 8CE80700 		stm	ip, {r0, r1, r2}
 107:Core/Src/freertos.c **** 
 124              		.loc 1 107 3 view .LVU16
 107:Core/Src/freertos.c **** 
 125              		.loc 1 107 23 is_stmt 0 view .LVU17
 126 0018 0021     		movs	r1, #0
 127 001a 01A8     		add	r0, sp, #4
 128 001c FFF7FEFF 		bl	osThreadCreate
 129              	.LVL4:
 107:Core/Src/freertos.c **** 
 130              		.loc 1 107 21 view .LVU18
 131 0020 024B     		ldr	r3, .L9+4
 132 0022 1860     		str	r0, [r3]
 113:Core/Src/freertos.c **** 
 133              		.loc 1 113 1 view .LVU19
 134 0024 08B0     		add	sp, sp, #32
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 8
 137              		@ sp needed
 138 0026 10BD     		pop	{r4, pc}
 139              	.L10:
 140              		.align	2
 141              	.L9:
 142 0028 00000000 		.word	.LANCHOR2
 143 002c 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 6


 144              		.cfi_endproc
 145              	.LFE136:
 147              		.global	defaultTaskHandle
 148              		.section	.rodata
 149              		.align	2
 150              		.set	.LANCHOR2,. + 0
 151              	.LC2:
 152 0000 00000000 		.word	.LC0
 153 0004 00000000 		.word	StartDefaultTask
 154 0008 0000     		.short	0
 155 000a 0000     		.space	2
 156 000c 00000000 		.word	0
 157 0010 80000000 		.word	128
 158 0014 00000000 		.word	0
 159 0018 00000000 		.word	0
 160              		.section	.bss.defaultTaskHandle,"aw",%nobits
 161              		.align	2
 162              		.set	.LANCHOR3,. + 0
 165              	defaultTaskHandle:
 166 0000 00000000 		.space	4
 167              		.section	.bss.xIdleStack,"aw",%nobits
 168              		.align	2
 169              		.set	.LANCHOR1,. + 0
 172              	xIdleStack:
 173 0000 00000000 		.space	512
 173      00000000 
 173      00000000 
 173      00000000 
 173      00000000 
 174              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 175              		.align	2
 176              		.set	.LANCHOR0,. + 0
 179              	xIdleTaskTCBBuffer:
 180 0000 00000000 		.space	84
 180      00000000 
 180      00000000 
 180      00000000 
 180      00000000 
 181              		.text
 182              	.Letext0:
 183              		.file 2 "e:\\gcc\\2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 184              		.file 3 "e:\\gcc\\2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 185              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 186              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 187              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 188              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:17     .rodata.str1.4:00000000 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:24     .text.StartDefaultTask:00000000 $t
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:30     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:60     .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:66     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:91     .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:97     .text.MX_FREERTOS_Init:00000000 $t
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:103    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:142    .text.MX_FREERTOS_Init:00000028 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:165    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:149    .rodata:00000000 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:161    .bss.defaultTaskHandle:00000000 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:168    .bss.xIdleStack:00000000 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:172    .bss.xIdleStack:00000000 xIdleStack
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:175    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\zhaohe\AppData\Local\Temp\ccICMXRP.s:179    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
MX_USB_DEVICE_Init
osDelay
osThreadCreate
